<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>trade-injector</groupId>
	<artifactId>trade-injector</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.4.1.RELEASE</version>
	</parent>


	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-websocket</artifactId>
		</dependency>

		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>webjars-locator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>sockjs-client</artifactId>
			<version>1.0.2</version>
		</dependency>
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>stomp-websocket</artifactId>
			<version>2.3.3</version>
		</dependency>
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>bootstrap</artifactId>
			<version>3.3.7</version>
		</dependency>
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>jquery</artifactId>
			<version>3.1.0</version>
		</dependency>
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>angularjs</artifactId>
			<version>1.4.9</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-mongodb</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security.oauth</groupId>
			<artifactId>spring-security-oauth2</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.typesafe.akka</groupId>
			<artifactId>akka-actor_2.11</artifactId>
			<version>2.5.1</version>
		</dependency>
		<dependency>
			<groupId>com.example.mu</groupId>
			<artifactId>domain</artifactId>
			<version>1.0-SNAPSHOT</version>
		</dependency>
		<dependency>
			<artifactId>cache</artifactId>
			<groupId>com.example.mu</groupId>
			<version>1.0-SNAPSHOT</version>
			<exclusions>
				<!-- exclusion>
					<groupId>com.hazelcast</groupId>
					<artifactId>hazelcast-zookeeper</artifactId>
				</exclusion-->
				<exclusion>
					<groupId>org.apache.zookeeper</groupId>
					<artifactId>zookeeper</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
            <groupId>org.apache.curator</groupId>
            <artifactId>curator-x-discovery</artifactId>
            <version>3.3.0</version>
        </dependency>
		<dependency>
			<groupId>com.hazelcast</groupId>
			<artifactId>hazelcast</artifactId>
			<version>3.8.1</version>
		</dependency>
		
		<dependency>
			<groupId>com.hazelcast</groupId>
			<artifactId>hazelcast-client</artifactId>
			<version>3.8.1</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.kafka</groupId>
			<artifactId>spring-kafka</artifactId>
			<version>1.0.0.RELEASE</version>
			<exclusions>
				<exclusion>
					<groupId>org.apache.zookeeper</groupId>
					<artifactId>zookeeper</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- dependency> <groupId>org.springframework.cloud</groupId> <artifactId>spring-cloud-commons</artifactId> 
			<version>1.1.1.RELEASE</version> </dependency> <dependency> <groupId>org.springframework.cloud</groupId> 
			<artifactId>spring-cloud-zookeeper-discovery</artifactId> <version>1.1.1.RELEASE</version> 
			</dependency -->
		<!-- dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-zookeeper-all</artifactId>
			<version>1.1.1.RELEASE</version>
		</dependency-->
		<dependency>
			<groupId>io.reactivex</groupId>
			<artifactId>rxjava</artifactId>
			<version>1.1.5</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.kafka</groupId>
			<artifactId>spring-kafka-test</artifactId>
			<version>1.2.0.RELEASE</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.apache.zookeeper</groupId>
					<artifactId>zookeeper</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.hazelcast.jet/hazelcast-jet-core -->
		<!-- dependency> <groupId>com.hazelcast.jet</groupId> <artifactId>hazelcast-jet</artifactId> 
			<version>0.3</version> </dependency -->
		<!-- https://mvnrepository.com/artifact/com.hazelcast.jet/hazelcast-jet-kafka -->
		<!-- <dependency> <groupId>com.hazelcast.jet</groupId> <artifactId>hazelcast-jet-kafka</artifactId> 
			<version>0.3.1</version> </dependency> -->


	</dependencies>
	<!-- 
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>Brixton.SR7</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	 -->




	<properties>
		<java.version>1.8</java.version>
		<start-class>com.trade.injector.controller.TradeInjectorController</start-class>
		<docker.skip>false</docker.skip>
		<docker.repository>docker.io</docker.repository>
		<docker.image.prefix>dineshpillai</docker.image.prefix>
		<docker.artifact.id>innovation-trade-injector</docker.artifact.id>
	</properties>
	<scm>
		<connection>scm:git:https://github.com/dineshgpillai/innovation.git</connection>
		<developerConnection>scm:git:https://github.com/dineshgpillai/innovation.git</developerConnection>
		<tag>spanners-4.1</tag>
	</scm>
	<distributionManagement>
		<repository>
			<id>internal.repo</id>
			<name>Temporary Staging Repository</name>
			<url>file://${project.build.directory}/mvn-repo</url>
		</repository>
	</distributionManagement>


	<build>
		<finalName>${project.artifactId}</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<skipTests>true</skipTests>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<finalName>${project.build.finalName}</finalName>
					<fork>true</fork>
					<mainClass>${start-class}</mainClass>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- <plugin> <artifactId>maven-release-plugin</artifactId> <version>2.4.1</version> 
				<dependencies> <dependency> <groupId>org.apache.maven.scm</groupId> <artifactId>maven-scm-api</artifactId> 
				<version>1.8.1</version> </dependency> <dependency> <groupId>org.apache.maven.scm</groupId> 
				<artifactId>maven-scm-provider-gitexe</artifactId> <version>1.8.1</version> 
				</dependency> </dependencies> </plugin> plugin> <artifactId>maven-deploy-plugin</artifactId> 
				<version>2.8.1</version> <configuration> <altDeploymentRepository>internal.repo::default::file://${project.build.directory}/mvn-repo</altDeploymentRepository> 
				</configuration> </plugin -->
		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>com.spotify</groupId>
					<artifactId>docker-maven-plugin</artifactId>
					<version>0.4.10</version>
					<configuration>
						<imageName>${docker.image.prefix}/${docker.artifact.id}</imageName>
						<baseImage>java:openjdk-8-jdk-alpine</baseImage>
						<entryPoint>["java","-jar","/${project.build.finalName}.jar"]</entryPoint>
						<imageTags>
							<imageTag>${project.version}</imageTag>
							<imageTag>latest</imageTag>
						</imageTags>
						<serverId>docker-hub</serverId>
						<skipDockerBuild>${docker.skip}</skipDockerBuild>
						<resources>
							<!-- copy the service's jar file from target into the root directory 
								of the image -->
							<resource>
								<targetPath>/</targetPath>
								<directory>${project.build.directory}</directory>
								<include>${project.build.finalName}.jar</include>
							</resource>
							<!-- Copy contents of project's docker directory, if it exists. Used 
								to pull in docker build specific application.properties settings -->
							<resource>
								<targetPath>/</targetPath>
								<directory>${project.basedir}</directory>
								<include>*</include>
							</resource>
						</resources>
					</configuration>
					<executions>
						<execution>
							<id>build-image</id>
							<phase>package</phase>
							<goals>
								<goal>build</goal>
							</goals>
						</execution>
						<execution>
							<id>tag-image-version</id>
							<phase>deploy</phase>
							<goals>
								<goal>tag</goal>
							</goals>
							<configuration>
								<image>${docker.image.prefix}/${docker.artifact.id}</image>
								<newName>${docker.repository}/${docker.image.prefix}/${docker.artifact.id}:${project.version}</newName>
								<pushImage>true</pushImage>
							</configuration>
						</execution>
						<execution>
							<id>tag-image-latest</id>
							<phase>deploy</phase>
							<goals>
								<goal>tag</goal>
							</goals>
							<configuration>
								<image>${docker.image.prefix}/${docker.artifact.id}</image>
								<newName>${docker.repository}/${docker.image.prefix}/${docker.artifact.id}:latest</newName>
								<pushImage>true</pushImage>
							</configuration>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>

		<extensions>
			<!-- Enabling the use of FTP -->
			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-ftp</artifactId>
				<version>2.9</version>
			</extension>
		</extensions>
		<!-- <plugins> <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-surefire-plugin</artifactId> 
			<configuration> <skipTests>false</skipTests> </configuration> </plugin> <plugin> 
			<groupId>org.springframework.boot</groupId> <artifactId>spring-boot-maven-plugin</artifactId> 
			<configuration> <finalName>tradeInjectorUI</finalName> <fork>true</fork> 
			<mainClass>${start-class}</mainClass> </configuration> <executions> <execution> 
			<goals> <goal>repackage</goal> </goals> </execution> </executions> </plugin> 
			</plugins> -->
	</build>
</project>
